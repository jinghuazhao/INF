#!/usr/bin/bash

#SBATCH --job-name=MR.data
#SBATCH --account CARDIO-SL0-CPU
#SBATCH --partition cardio
#SBATCH --qos=cardio
#SBATCH --array=1-59
#SBATCH --mem=40800
#SBATCH --time=5-00:00:00
#SBATCH --output=/rds/user/jhz22/hpc-work/work/_mr_%A_%a.out
#SBATCH --error=/rds/user/jhz22/hpc-work/work/_mr_%A_%a.err
#SBATCH --export ALL

export TMPDIR=/rds/user/jhz22/hpc-work/work
export job=$SLURM_ARRAY_TASK_ID

export p=$(awk 'NR==ENVIRON["SLURM_ARRAY_TASK_ID"]{print $1}' ${INF}/work/inf1.tmp)

function gsmr()
{
  awk -vFS="\t" 'NR>1 {print $4}' ${INF}/rsid/efo.txt | \
  while read efo
  do
  export trait=${efo}
  if [ ! -f ${INF}/mr/gsmr/trait/gsmr_${trait} ]; then echo ${trait} HGI/gsmr_${trait}.txt.gz > ${INF}/HGI/gsmr_${trait}; fi
  if [ ! -f ${INF}/HGI/gsmr_ref_data ]; then echo $INF/work/INTERVAL > ${INF}/HGI/gsmr_ref_data; fi
  if [ ! -f ${INF}/HGI/gsmr_$p ]; then echo $p $INF/work/$p.ma > ${INF}/HGI/gsmr_$p; fi

  gcta-1.9 --mbfile ${INF}/HGI/gsmr_ref_data --gsmr-file HGI/gsmr_$p ${INF}/HGI/gsmr_${trait} \
           --gsmr-direction 0 \
           --clump-r2 0.05 --gwas-thresh 5e-8 --diff-freq 0.4 --heidi-thresh 0.05 --gsmr-snp-min 5 --effect-plot \
           --out ${INF}/HGI/gsmr_${trait}_$p

  R --no-save -q <<\ \ END
    INF <- Sys.getenv("INF")
    trait <- Sys.getenv("trait")
    p <- Sys.getenv("p")
    source("http://cnsgenomics.com/software/gcta/res/gsmr_plot.r")
    gsmr_data <- read_gsmr_data(paste0(INF,"/HGI/gsmr_",trait,"_",p,".eff_plot.gz"))
    gsmr_summary(gsmr_data)
    pdf(paste0(INF,"/HGI/gsmr_",trait,"_",p,".eff_plot.pdf"))
    plot_gsmr_effect(gsmr_data, p, trait, colors()[75])
    dev.off()
  END
  done
}

### --- the following is obsolete

function MR_dat()
{
cut -f3 work/INF1.METAL | sed '1d' | sort | uniq | grep -w -f - work/INF1.merge.genes | awk -vjob=${job} 'NR==job' | \
parallel -j1 -C' ' '
  echo --- {2} ---
  gunzip -c METAL/{2}-1.tbl.gz | \
  cut -f1-6,10-12,18 | \
  awk -vchr={3} -vstart={4} -vend={5} -vM=1e6 -vlogp=-5.45131 -vsuffix=${suffix} "
        (suffix==\"cis\" && \$1==chr && \$2>=start-M && \$2 <= end+M && \$9<=logp) || (suffix==\"pan\" && \$9<=logp)
      " > work/mr/{2}-${suffix}.mri
  cut -f3 work/mr/{2}-${suffix}.mri > work/mr/{2}-${suffix}.mrs
  plink --bfile INTERVAL/cardio/INTERVAL --extract work/mr/{2}-${suffix}.mrs \
        --geno 0.1 --mind 0.1 --maf 0.005 --indep-pairwise 1000kb 1 0.01 --out work/mr/{2}-${suffix}
  (
    echo -e "rsid\tChromosome\tPosition\tAllele1\tAllele2\tFreq1\tEffect\tStdErr\tlogP\tN"
    grep -w -f work/mr/{2}-${suffix}.prune.in work/mr/{2}-${suffix}.mri | \
    awk "{\$3=\"chr\"\$1\":\"\$2;print}" | \
    sort -k3,3 | \
    join -23 -12 work/snp_pos - | \
    cut -d" " -f1 --complement | \
    tr " " "\t"
  ) | gzip -f > work/mr/{2}-${suffix}.mrx
'
}

function MR_dat_run()
{
  if [ ! -f work/INF1.merge.genes ]; then
     cut -f3,8,9,10 doc/olink.inf.panel.annot.tsv | grep -v BDNF | sed 's/"//g' | sort -k1,1 | join -12 work/inf1.tmp - > work/INF1.merge.genes
  fi
  if [ ! -d work/mr ]; then mkdir work/mr; fi
  for type in cis pan; do export suffix=${type}; MR_dat; done
}
