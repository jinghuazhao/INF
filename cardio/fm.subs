#!/bin/bash
# 24-5-2019 JHZ

export f=${7}-chr${1}_${2}_${3}

if [ ! -d $rt/$f ]; then mkdir $rt/$f; fi
cd $rt/$f

echo "--> binary_ped"
if [ ! -d work ]; then mkdir work; fi
gunzip -c $GEN_location/chr${1}_${2}_${3}.gen.gz | \
awk -f $FM_location/files/order.awk chr=${1} > work/$f.ord
qctool -filetype gen -g work/$f.ord -s ${sample_file} -ofiletype binary_ped -og work/$f \
       -excl-range 1:48227413-52227412 2:86146489-101133568 2:183291755-190291755 \
                   3:47524996-50024996 3:83417310-86917310 5:44464243-50464243 5:128972101-131972101 \
                   6:25392021-33392022 6:56892041-63942041 6:139958307-142458307 7:55032506-66362565 \
                   8:7962590-11962591 8:42880843-49837447 8:111930824-114930824 10:36959994-43679994 \
                   11:87860352-90860352 12:33108733-41713733 20:32536339-35066586 \
       -threshold 0.9 -log $f.log -assume-chromosome ${1}

echo "--> region-specific data"
awk "(\$9==chr && \$10 >= l && \$10 <= u){if(\$2<\$3) {a1=\$2; a2=\$3;} else {a1=\$3; a2=\$2};\
     \$0=\$0 \" \" \$9 \":\" \$10 \"_\" a1 \"_\" a2;print}" chr=${1} l=${2} u=${3} $rt/${7}-${4} | \
sort -k11,11 > $f.txt

echo "--> GWAS auxiliary files"
sort -k2,2 work/$f.bim | \
join -111 -22 $f.txt - | \
sort -k11,11 > $f.incl
awk "{print \$10,\$11,\$3,\$4,\$5,\$6,\$7,\$8,\$9,\$2,\$1,\$6/\$7}" $f.incl > $f.r
cut -d" " -f10,11 $f.r > $f.rsid
cut -d" " -f11,12 $f.r > $f.z
(
  awk "BEGIN{print \"rsid\",\"chromosome\",\"position\",\"allele1\",\"allele2\",\"maf\",\"beta\",\"se\"}"
  awk -veps=0.00001 "{if(\$5==\"NA\") \$5=eps; if(\$5>0.5) \$5=1-\$5; print \$11,\$1,\$2,\$3,\$4,\$5,\$6,\$7}" $f.r
) > $f.fm.z
awk "{print \$1}" $f.incl > $f.inc
awk "{print \$1,\$4,\$3,\$15,\$16}" $f.incl > $f.a
(
  echo "RSID position chromosome A_allele B_allele"
  awk "{print \$1,\$11,\$10,\$4,\$3}" $f.incl
) > $f.incl_variants
grep -f $f.inc $f.txt | \
sort -k11,11 > $f.dat

echo "--> bfile"
plink-1.9 --bfile work/$f --extract $f.inc \
          --make-bed --keep-allele-order --a2-allele $f.a 3 1 --out $f

if [ $LD_MAGIC -eq 1 ]; then
   gunzip -c work/$f.gen.gz | \
   awk -f $FM_location/files/order.awk chr=${1} > work/$f.ord
   qctool -filetype gen -g work/$f.ord -s ${sample_file} -ofiletype gen -og work/$f.magic.gen \
          -threads $threads -threshhold 0.9 -log $f.log -omit-chromosome
   awk -f $FM_location/files/info.awk c=2 work/$f.info > work/$f.magic.info
   gzip -f work/$f.magic.gen
   Rscript --vanilla $FM_location/files/computeCorrelationsImpute2forFINEMAP.r \
            work/$f.magic.info work/$f.magic.gen.gz ${1} ${2} ${3} 0.01 0.4 $f.magic $threads
   Rscript --vanilla $FM_location/files/lowtri2square.r
fi

if [ $LD_PLINK -eq 1 ]; then
   plink-1.9 --bfile $f --maf 0.0001 --freq --threads 3 --out $f
   awk "(\$5<0.0001){print \$2}" $f.frq > $f.excl
   cp $f.z $f.sav
   plink-1.9 --bfile $f --maf 0.0001 --r square --threads 3 --out $f
   sed "s/\t/ /g" $f.ld > $f.plink
fi

if [ $CAVIAR -eq 1 ] || [ $CAVIARBF -eq 1 ] || [ $finemap -eq 1 ]; then
   ldstore --bcor $f.bcor --bplink $f --n-threads ${threads}
   ldstore --bcor $f.bcor --merge ${threads}
   ldstore --bcor $f.bcor --matrix $f.ld --incl_variants $f.incl_variants
   sed -i -e "s/  */ /g; s/^ *//; /^$/d" $f.ld
fi

if [ $CAVIAR -eq 1 ]; then
   echo "--> CAVIAR"
   CAVIAR -z $f.z -l $f.ld -r 0.9 -o $f
fi

if [ $CAVIARBF -eq 1 ]; then
   echo "--> CAVIARBF"
   caviarbf -z $f.z -r $f.ld -n $(sort -k9,9g $f.r | \
   tail -n1 | cut -d" " -f9) -t 0 -a 0.1 -c 3 --appr -o $f.caviarbf
fi

if [ $clumping -eq 1 ]; then
   echo "--> clumping"
   (
      echo "snpid\tP"
      awk -vOFS="\t" '{print $1,$7}' $f.txt
   ) > $f.tab
   plink-1.9 --bfile $f \
             --clump $f.tab \
             --clump-field P \
             --clump-kb 500 \
             --clump-p1 5e-08 \
             --clump-r2 0 \
             --clump-snp-field snpid \
             --out $f
fi

if [ $FM_summary -eq 1 ]; then
   echo "--> FM-summary"
   (
     echo "region chr pos A B Freq1 Effect StdErr P N SNP inCredible probNorm cumSum" | \
     sed "s/ /\t/g"
     $FM_location/files/getCredible.r
     awk "!(/SNP/&&/inCredible/){print f, \$0}" OFS="\t" f=$f $f.cre
   ) > FM-summary.txt
fi

if [ $GCTA -eq 1 ]; then
   echo "--> GCTA"
   awk -f $FM_location/files/info.awk c=1 chr=${1} $GEN_location/$f.info | \
   sort -k2,2 > $f.tmp
   sort -k2,2 work/$f.bim | \
   join -j2 $f.tmp - | \
   awk -vOFS="\t" "{print \$7,\$6,0,\$2,\$10,\$11,\$9}" > ${f}_map
   sort -k4,4 ${f}_map | \
   join -111 -24 $f.r - | \
   grep -f $f.inc | \
   awk -f $FM_location/files/ma.awk > $f.ma
   gcta64 --bfile $f --cojo-file $f.ma --cojo-wind 0 --cojo-joint --cojo-collinear 0.9 --out $f
   gcta64 --bfile $f --cojo-file $f.ma --cojo-wind 0 --cojo-slct --maf 0.000072 --out $f
   grep ${5} $f.r | \
   cut -d" " -f11 > $f.snpid
   gcta64 --bfile $f --cojo-file $f.ma --cojo-wind 0 --cojo-cond $f.snpid --out $f
   gcta64 --bfile $f --cojo-file $f.ma --cojo-wind 0 --cojo-top-SNPs 1 --out $f.top
   cut -d" " -f10,11 $f.r | \
   sort -k2,2 | \
   sed "s/ /\t/g">$f.tmp
fi

if [ $JAM -eq 1 ]; then
   echo "--> JAM"
   grep ${5} $f.r | \
   cut -d" " -f11 > $f.snpid
   plink-1.9 --bfile $f --exclude $f.snpid --indep-pairwise 500kb 1 0.80 --maf 0.0001 --out $f
   cat $f.snpid >> $f.prune.in
   grep -w -f $f.prune.in $f.a > $f.p
   grep -w -f $f.prune.in $f.dat > ${f}p.dat
   plink-1.9 --bfile $f --extract $f.prune.in --keep-allele-order --a2-allele $f.p 3 1 --make-bed --out ${f}p
   R -q --no-save < ${FM_location}/files/JAM.R > $f.log
   R -q --no-save < ${FM_location}/files/JAM-cs.R > JAM-cs.log
fi

if [ $LocusZoom -eq 1 ]; then
   echo "--> LocusZoom"
   awk -v OFS="\t" "{if(NR==1) print \"MarkerName\",\"P-value\",\"Weight\"; print \$10,\$8,\$9}" $f.r > $f.lz
   rm -f ld_cache.db
   locuszoom-1.4 --source 1000G_Nov2014 --build hg19 --pop EUR --metal $f.lz --plotonly \
                 --chr ${1} --start ${2} --end ${3} --no-date --rundir .
   pdftopng ${7}-chr${1}_${2}-${3}.pdf -r 300 ${5}
   R -q --no-save < ${FM_location}/files/lz.R > lz.log
fi

if [ $finemap -eq 1 ]; then
   echo "--> finemap"
   (
     echo "z;ld;snp;config;log;n_samples;cred"
     sort -k9,9g $f.r | \
     tail -n1 | \
     cut -d" " -f9 | \
     awk -vf=$f "{print sprintf(\"%s.fm.z;%s.ld;%s.snp;%s.config;%s.log;%d;%s.cred\",f,f,f,f,f,int(\$1),f)}"
   ) > finemap.cfg
   finemap --sss --in-files finemap.cfg --n-causal-snps 5 --corr-config 0.9
   awk "{if(NR==1) \$0=\$0 \" order\"; else \$0=\$0 \" \" NR-1;print}" $f.snp > $f.sav
   (
     awk "NR==1" $f.sav | \
     awk "{print \$0 \" rsid\"}"
     awk "(NR>1)" $f.sav | \
     sort -k2,2 | \
     join -j2 - $f.rsid | \
     sort -k5,5n | \
     awk "{t=\$1;\$1=\$2;\$2=t};1"
   ) > $f.snp
   R -q --no-save < ${FM_location}/files/finemap.R > $f.out
fi
cd -
