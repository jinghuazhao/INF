#!/usr/bin/bash

#SBATCH --job-name=FUSION_TWAS
#SBATCH --account CARDIO-SL0-CPU
#SBATCH --partition cardio
#SBATCH --qos=cardio
#SBATCH --array=53
#SBATCH --mem=40800
#SBATCH --time=5-00:00:00
#SBATCH --output=/rds/user/jhz22/hpc-work/work/_fusion_twas_%A_%a.out
#SBATCH --error=/rds/user/jhz22/hpc-work/work/_fusion_twas_%A_%a.err
#SBATCH --export ALL

export TMPDIR=/rds/user/jhz22/hpc-work/work
export job=$SLURM_ARRAY_TASK_ID

function init()
{
  if [ ! -d ${INF}/FUSION ]; then mkdir ${INF}/FUSION; fi
  if [ ! -d ${INF}/FUSION/plink ]; then mkdir ${INF}/FUSION/plink; fi
  if [ ! -d ${INF}/FUSION/tmp ]; then mkdir ${INF}/FUSION/tmp; fi
  ln -sf . output
  parallel --env FUSION --env INF -C' ' 'awk -vOFS="\t" "
  {
    if (\$5 < \$6) snpid=\"chr\"\$1\":\"\$4\"_\"\$5\"_\"\$6;
    else snpid=\"chr\"\$1\":\"\$4\"_\"\$6\"_\"\$5
    print snpid, \$2
  }" ${FUSION}/LDREF/1000G.EUR.{}.bim > ${INF}/FUSION/1000G.EUR.{}.snpid' ::: $(seq 22)
  grep NA ${INF}/INTERVAL/cardio/INTERVAL.pheno | cut -d' ' -f1,2 > ${INF}/FUSION/plink/remove.id
  grep -v NA ${INF}/INTERVAL/cardio/INTERVAL.qcovar > ${INF}/FUSION/plink/INTERVAL.qcovar
  Rscript -e "write.table(pQTLtools::inf1,file=file.path(Sys.getenv('INF'),'FUSION','INF1.tsv'),row.names=FALSE,quote=FALSE,sep='\t')"
  sed '1d' ${INF}/FUSION/INF1.tsv | cut -f2,5-8 --output-delimiter=' ' | sort -k2,2 | \
  join -o1.1,1.2,1.3,1.4,2.1,2.2,2.3,2.4 -e NA -a2 -12 -24 - <(sort -k4,4 ${INF}/csd3/glist-hg19)
  ln -sf ${FUSION}/gcta_nr_robust ${HPC_WORK}/bin/gcta_nr_robust
  ln -sf /usr/local/Cluster-Apps/plink/2.00-alpha/plink2 ${HPC_WORK}/bin/plink2
}

function compute_weights_parallel()
{
  export FUSION=${HPC_WORK}/fusion_twas
  sed '1d' ${INF}/FUSION/INF1.tsv | cut -f2,5-8 --output-delimiter=' ' | sort -k2,2n | \
  parallel --env FUSION --env INF -C' ' '
    export prot={1}
    export gene={2}
    export chr={3}
    export P0=$(awk -v start={4} "BEGIN{if(start<1e6) print 1; else print start-1e6}")
    export P1=$(expr {5} + 1000000)
    export col=$(awk "\$1 == ENVIRON[\"prot\"] {print NR}" ${INF}/csd3/prot.list)
    plink2 --bfile ${INF}/INTERVAL/cardio/INTERVAL --pheno ${INF}/INTERVAL/cardio/INTERVAL.pheno --pheno-col-nums ${col} \
           --make-bed --out ${INF}/FUSION/plink/${prot}-${P0}-${P1}-plink --allow-no-sex \
           --chr ${chr} --from-bp ${P0} --to-bp ${P1} --maf 0.01 --remove ${INF}/FUSION/plink/remove.id > /dev/null
    Rscript ${FUSION}/FUSION.compute_weights.R --verbose 2 --save_hsq \
            --bfile ${INF}/FUSION/plink/${prot}-${P0}-${P1}-plink \
            --covar ${INF}/FUSION/plink/INTERVAL.qcovar \
            --tmp ${prot}-${P0}-${P1} \
            --out ${INF}/FUSION/${prot}-${P0}-${P1} \
            --hsq_set 0.1 --models top1,blup,bslmm,lasso,enet
  '
}

function compute_weights()
{
  export FUSION=${HPC_WORK}/fusion_twas
  export prot=$(awk 'NR==ENVIRON["job"]' ${INF}/csd3/prot.list)
  cd ${INF}/FUSION/tmp
  grep -w ${prot} ${INF}/work/INF1.merge | cut -f8,9 --output-delimiter=' ' | while read chr pos;
  do
    export P0=$(awk -v pos=${pos} "BEGIN{if(pos<1e6) print 1; else print pos-1e6}")
    export P1=$(expr ${pos} + 1000000)
    plink2 --bfile ${INF}/INTERVAL/cardio/INTERVAL --pheno ${INF}/INTERVAL/cardio/INTERVAL.pheno --pheno-col-nums ${job} \
           --make-bed --out ${INF}/FUSION/plink/${prot}-${P0}-${P1}-plink --allow-no-sex \
           --chr ${chr} --from-bp ${P0} --to-bp ${P1} --maf 0.01 --remove ${INF}/FUSION/plink/remove.id > /dev/null
    Rscript ${FUSION}/FUSION.compute_weights.R --verbose 2 --save_hsq \
            --bfile ${INF}/FUSION/plink/${prot}-${P0}-${P1}-plink \
            --covar ${INF}/FUSION/plink/INTERVAL.qcovar \
            --tmp ${prot}-${P0}-${P1} \
            --out ${INF}/FUSION/${prot}-${P0}-${P1} \
            --hsq_set 0.8
  done
}

compute_weights
