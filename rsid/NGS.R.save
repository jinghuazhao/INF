#
suppressMessages(library(dplyr))
suppressMessages(library(openxlsx))

rds <- function(src="rds")
{
  if (src=="rds")
  {
    f <- "~/rds/results/public/proteomics/deCODE/doc/eldjarn22.xlsx"
    S1 <- read.xlsx(f,1)
    S2 <- read.xlsx(f,3)
  } else {
    f <- 'https://www.biorxiv.org/content/biorxiv/early/2022/02/20/2022.02.18.481034/DC3/embed/media-3.xlsx'
    S1 <- read.xlsx(f)
    f <- 'https://www.biorxiv.org/content/biorxiv/early/2022/02/20/2022.02.18.481034/DC12/embed/media-12.xlsx'
    S3 <- read.xlsx(f)
  }
  save(S1,S3,file=file.path(INF,"ukb","tables.rda"))
}

check <- function(snps)
{
   sentinel_and_snps <- c(sentinels[i],snps[grepl("^rs",snps)])
   r[[i]] <- LDlinkR::LDmatrix(snps=sentinel_and_snps,pop="EUR",r2d="r2",token=key)
   r2 <- subset(r[[i]],RS_number==sentinels[i])
   sel <- !is.na(r2) & r2>=0.8
   cat(sentinels[i],"\n")
   print(names(r2)[sel])
   print(r2[sel])
}

INF <- Sys.getenv("INF")
rds()
load(file.path(INF,"ukb","tables.rda"))
metal <- read.delim(file.path(INF,"work","INF1.METAL")) %>%
         mutate(uniprot_rsid=paste0(uniprot,"-",rsid))
ss <- merge(S1,S3) %>%
      mutate(uniprot_rsid=paste0(uniprot,"-",rsName)) %>%
      filter(uniprot_rsid%in%metal$uniprot_rsid) %>%
      left_join(metal) %>%
      left_join(select(gap.datasets::inf1,prot,target,target.short)) %>%
      select(target.short,rsid,MarkerName,uniprot,cis.trans,Log10.pval.gc.cor.unadj) %>%
      transmute(Protein=target.short,Sentinels=rsid,UniProt=uniprot,SNPid=MarkerName,"cis/trans"=cis.trans,
                Proxies="as sentinel",r2=1,p=10^-Log10.pval.gc.cor.unadj,Source="Eldjarn, et al. (2022)",PMID="",Comment="")
options(width=200)
write.table(ss,file=file.path(INF,"ukb","NGS.tsv"),row.names=FALSE,quote=FALSE,sep="\t")
load(file.path(INF,"work","novel_data.rda"))
cojo <- merge(read.csv(file.path(INF,"sentinels","INF1.jma-rsid.cis.vs.trans.csv")),gap.datasets::inf1[c("prot","target.short")],by="prot") %>%
        mutate(prot=target.short) %>% rename(Protein=prot) %>% select(-target.short)
region <- merge(S1,S3) %>%
          filter(uniprot %in% cojo[["uniprot"]])
key <- Sys.getenv("LDLINK_TOKEN")
sentinels <- unique(region$rsName)
pos <- unique(subset(region,))
with(region,table(rsName,Affected.Protein.Gene.name))
blocks <- r <- list()
for(i in 1:length(sentinels))
{
  x <- subset(cojo,rsName==sentinels[i])
  chr <- with(x,Chr)
  pos <- with(x,bp)
  blocks[[i]] <- subset(region,Chrom==
  check(blocks[[i]]$rsid)
}
