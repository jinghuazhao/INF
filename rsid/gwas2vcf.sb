#!/usr/bin/bash

#SBATCH --job-name=_gwasvcf
#SBATCH --account CARDIO-SL0-CPU
#SBATCH --partition cardio
#SBATCH --qos=cardio
#SBATCH --mem=28800
#SBATCH --array=1-91
#SBATCH --time=5-00:00:00
#SBATCH --output=/rds/user/jhz22/hpc-work/work/_gwasvcf_%A_%a.out
#SBATCH --error=/rds/user/jhz22/hpc-work/work/_gwasvcf_%A_%a.err
#SBATCH --export ALL

export job=$SLURM_ARRAY_TASK_ID
export TMPDIR=/rds/user/jhz22/hpc-work/work

module load jdk-8u141-b15-gcc-5.4.0-p4aaopt
module load gatk
module load python/3.7
cd ${HPC_WORK}/gwas2vcf
source env/bin/activate
export prot=$(cut -f1 ${INF}/work/inf1.tmp | grep -v BDNF | sort | uniq | awk 'NR==ENVIRON["SLURM_ARRAY_TASK_ID"]')
echo ${prot}
if [ ! -f ${INF}/METAL/gwasvcf/${prot}.txt.gz ]; then
   (
     awk -vOFS="\t" 'BEGIN{print "chr","pos","snpid","a1","a2","af","b","se","logp","n"}'
     gunzip -c ${INF}/METAL/${prot}-1.tbl | \
     awk -vOFS="\t" 'NR>1{print $1,$2,$3,toupper($4),toupper($5),$6, $10, $11, (-$12), $18}' | \
     grep -v "<" | \
     sort -k1,1n -k2,2n
   ) | \
   gzip -f > ${INF}/METAL/gwasvcf/${prot}.txt.gz
fi
if [ ! -f ${INF}/METAL/gwasvcf/${prot}.vcf.gz ]; then
   python main.py --out ${INF}/METAL/gwasvcf/${prot}.vcf.gz --data ${INF}/METAL/gwasvcf/${prot}.txt.gz \
                  --ref human_g1k_v37.fasta --id "${prot}" --json ${INF}/rsid/gwasvcf.json
   tabix -f ${INF}/METAL/gwasvcf/${prot}.vcf.gz
fi
cd -

function vcfops()
# perform liftover
{
  module load jdk-8u141-b15-gcc-5.4.0-p4aaopt
  module load gatk
  module load python/3.7
  module load picard/2.9.2
  export reference=${HPC_WORK}/gwas2vcf/human_g1k_v37
  export input=${INF}/METAL/vcf/${prot}
  export output=${INF}/work/${prot}-b38
# extract a region
  bcftools filter -r 1:1000000-2000000 -o ${input}-r.vcf.gz ${input}.vcf.gz
# filter on p values
  bcftools filter -i 'FORMAT/LP > 7.3' -o ${input}-7.3.vcf ${input}.vcf.gz
# GWAS Catalogue
  bcftools query -e 'ID == "."' -f '%ID\t[%LP]\t%CHROM\t%POS\t%ALT\t%REF\t%AF\t[%ES\t%SE]\n' ${input}.vcf.gz | \
  awk 'BEGIN {
  print "variant_id\tp_value\tchromosome\tbase_pair_location\teffect_allele\tother_allele\teffect_allele_frequency\tbeta\tstandard_error"
  }; {OFS="\t"; if ($2==0) $2=1; else if ($2==999) $2=0; else $2=10^-$2; print}' | \
  gzip -f > ${input}.tsv.gz
# liftOver
  java -jar /usr/local/Cluster-Apps/picard/2.9.2/picard.jar CreateSequenceDictionary R=${reference}.fasta O=${reference}.dict
  gatk LiftoverVcf --INPUT ${input}.vcf.gz --OUTPUT ${output}.vcf.gz \
                   --REJECT ${input}-rejected.vcf.gz --CHAIN ${HPC_WORK}/bin/hg19ToHg38.over.chain \
                   --REFERENCE_SEQUENCE ${reference}.fasta --RECOVER_SWAPPED_REF_ALT false 
# Validation
  gatk ValidateVariants -V ${output}.vcf.gz -R ${reference}.fasta --validation-type-to-exclude ALLELES
}
