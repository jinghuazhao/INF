#!/usr/bin/bash

#SBATCH --job-name=_coloc
#SBATCH --account CARDIO-SL0-CPU
#SBATCH --partition cardio
#SBATCH --qos=cardio
#SBATCH --array=1-59
#SBATCH --mem=28800
#SBATCH --time=5-00:00:00
#SBATCH --error=/rds/user/jhz22/hpc-work/work/_coloc_%A_%a.err
#SBATCH --output=/rds/user/jhz22/hpc-work/work/_coloc_%A_%a.out
#SBATCH --export ALL

export job=${SLURM_ARRAY_TASK_ID}
export trait=$(awk -v job=${job} 'NR==job {print $1}' ${INF}/work/inf1.tmp)
export FUSION=${HPC_WORK}/fusion_twas

function no_slurm()
{
for r in {1..59}
do
   export r=${r}
   export cvt=${INF}/work/INF1.merge.cis.vs.trans
   read prot MarkerName < \
                        <(awk -vFS="," '$14=="cis"' ${cvt} | \
                          awk -vFS="," -vr=${r} 'NR==r{print $2,$5}')
   echo ${r} - ${prot} - ${MarkerName}
   export prot=${prot}
   export MarkerName=${MarkerName}
   if [ ! -f ${INF}/coloc/${prot}-${MarkerName}.pdf ] || \
      [ ! -f ${INF}/coloc/${prot}-${MarkerName}.RDS ]; then
     cd ${INF}/coloc
     R --no-save < ${INF}/rsid/coloc.R 2>&1 | \
     tee ${prot}-${MarkerName}.log
#    ls *tbi | xargs -I {} bash -c "rm {}"
     cd -
   fi
done
}

function fusion()
{
cd work
(
  awk -v OFS='\t' 'BEGIN{print "SNP","A1","A2","N","CHISQ","Z"}'
  gunzip -c ${INF}/METAL/${trait}-1.tbl.gz | \
  awk -v OFS='\t' 'NR>1{print $3,toupper($4),toupper($5),$18,($10/$11)^2,$10/$11,$1,$2}' | \
  sort -k1,1 | \
  join <(cat INTERVAL.rsid | tr ' ' '\t') - -t$'\t' | \
  sort -k8,8n -k9,9n | \
  cut -f2-7
) > ${trait}.sumstats
ln -sf ${FUSION}/WEIGHTS WEIGHTS
module load gcc/6
for tissue in Whole_Blood
do
  export tissue=${tissue}
  (
    awk -v OFS='\t' 'BEGIN{print "PANEL","FILE","ID","CHR","P0","P1","HSQ","BEST.GWAS.ID","BEST.GWAS.Z",
                    "EQTL.ID","EQTL.R2","EQTL.Z","EQTL.GWAS.Z","NSNP","NWGT",
                    "MODEL","MODELCV.R2","MODELCV.PV","TWAS.Z","TWAS.P",
                    "COLOC.PP0","COLOC.PP1","COLOC.PP2","COLOC.PP3","COLOC.PP4"}'
    (
      seq 22 | \
      parallel -j1 --env FUSION --env trait --env tissue -C' ' '
      Rscript ${FUSION}/FUSION.assoc_test.R \
              --sumstats ${trait}.sumstats \
              --weights ${FUSION}/WEIGHTS/${tissue}.P01.pos \
              --weights_dir WEIGHTS \
              --ref_ld_chr ${FUSION}/LDREF/1000G.EUR. \
              --chr {} \
              --coloc_P 5e-8 \
              --GWASN 15150 \
              --out ${trait}-${tissue}-{}.dat
      cat ${trait}-${tissue}-{}.dat | \
      if [ {} -eq 1 ]; then cat; else awk "NR>1"; fi
      rm ${trait}-${tissue}-{}.dat
      '
    ) | \
    grep -v -e WARNING -e skipped -e complete -e consider -e MHC -e TWAS | \
    sed "s|WEIGHTS/${tissue}/${tissue}.||g;s/.wgt.RDat//g" | \
    sort -k4,4n -k5,5n
  ) | \
  awk '$NF!="NA"' > ${trait}-${tissue}-coloc.dat
done
cd -
}

function gtex()
{
  export r=${SLURM_ARRAY_TASK_ID}
  export cvt=${INF}/work/INF1.merge.cis.vs.trans
  read prot MarkerName < \
                       <(awk -vFS="," '$14=="cis"' ${cvt} | \
                         awk -vFS="," -vr=${r} 'NR==r{print $2,$5}')
  echo ${r} - ${prot} - ${MarkerName}
  export prot=${prot}
  export MarkerName=${MarkerName}
  if [ ! -f ${INF}/coloc/${prot}-${MarkerName}.pdf ] || \
     [ ! -f ${INF}/coloc/${prot}-${MarkerName}.RDS ]; then
    cd ${INF}/coloc
    R --no-save < ${INF}/rsid/coloc.R 2>&1 | \
    tee ${prot}-${MarkerName}.log
    cd -
  fi
}

function ge()
# eQTL-Catalogue ge
{
  export r=${SLURM_ARRAY_TASK_ID}
  export cvt=${INF}/work/INF1.merge.cis.vs.trans
  read prot MarkerName < \
                       <(awk -vFS="," '$14=="cis"' ${cvt} | \
                         awk -vFS="," -vr=${r} 'NR==r{print $2,$5}')
  echo ${r} - ${prot} - ${MarkerName}
  export prot=${prot}
  export MarkerName=${MarkerName}
  if [ ! -f ${INF}/coloc/${prot}-${MarkerName}.pdf ] || \
     [ ! -f ${INF}/coloc/${prot}-${MarkerName}.RDS ]; then
    cd ${INF}/eQTLCatalogue
    R --no-save < ${INF}/rsid/coloc.R 2>&1 | \
    tee ${prot}-${MarkerName}.log
    cd -
  fi
}

gtex

#   ls *tbi | xargs -I {} bash -c "rm {}"

function coloc_gene()
{
  Rscript -e '
  suppressMessages(library(dplyr))
  library(openxlsx)

  INF <- Sys.getenv("INF")
  metal <- read.delim(file.path(INF,"work","INF1.METAL"))
  pqtls <- left_join(metal, pQTLtools::inf1)

  xlsx <- file.path(INF,"NG","SCALLOP-INF-ST.xlsx")

  plist <- function(sheet)
           read.xlsx(xlsx,sheet=sheet,startRow=2) %>%
           filter(flag=="x") %>%
           select(Protein) %>%
           distinct()

  gtex <- plist("ST4-GTEx coloc")
  eqtlgen <- plist("EQTLGen_coloc")
  eqtlcat <- plist("EQTL-Catalogue_coloc")

  pall <- unique(bind_rows(gtex,eqtlgen,eqtlcat)) %>%
          rename(target.short=Protein) %>%
          left_join(pQTLtools::inf1) %>%
          select(target.short,uniprot,prot,gene,ensembl_gene_id)
  genes <- pull(pall,gene)
  write.table(genes,row.names=FALSE,col.names=FALSE,quote=FALSE)
  '
}
